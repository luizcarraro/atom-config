(function() {
  var GoogleAnalytics, uuid;

  uuid = function() {
    var s4;
    s4 = function() {
      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
    };
    return "" + (s4()) + (s4()) + "-" + (s4()) + "-" + (s4()) + "-" + (s4()) + "-" + (s4()) + (s4()) + (s4());
  };

  module.exports = GoogleAnalytics = {
    getCid: function(cb) {
      if (this.cid) {
        cb(this.cid);
        return;
      }
      require("getmac").getMac(function(error, macAddress) {
        if (error) {
          return cb(this.cid = uuid());
        } else {
          return cb(this.cid = require("crypto").createHash("sha1").update(macAddress, "utf8").digest("hex"));
        }
      });
    },
    sendEvent: function(category, action, label, value) {
      var params;
      params = {
        t: "event",
        ec: category,
        ea: action
      };
      if (label) {
        params.el = label;
      }
      if (value) {
        params.ev = value;
      }
      this.send(params);
    },
    send: function(params) {
      if (!atom.packages.getActivePackage("metrics")) {
        return;
      }
      this.getCid(function(cid) {
        Object.assign(params, {
          cid: cid
        }, GoogleAnalytics.defaultParams());
        GoogleAnalytics.request("https://www.google-analytics.com/collect?" + require("querystring").stringify(params));
      });
    },
    request: function(url) {
      if (!navigator.onLine) {
        return;
      }
      this.post(url);
    },
    post: function(url) {
      var xhr;
      xhr = new XMLHttpRequest;
      xhr.open("POST", url);
      xhr.send(null);
    },
    defaultParams: function() {
      return {
        v: 1,
        tid: "UA-53539506-18"
      };
    }
  };

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiL2hvbWUvbHVpei5jYXJyYXJvLy5hdG9tL3BhY2thZ2VzL2F1dG8tdXBkYXRlLXBsdXMvbGliL2dhLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBLE1BQUE7O0VBQUEsSUFBQSxHQUFPLFNBQUE7QUFDTCxRQUFBO0lBQUEsRUFBQSxHQUFLLFNBQUE7YUFDSCxJQUFJLENBQUMsS0FBTCxDQUFXLENBQUMsQ0FBQSxHQUFJLElBQUksQ0FBQyxNQUFMLENBQUEsQ0FBTCxDQUFBLEdBQXNCLE9BQWpDLENBQXlDLENBQUMsUUFBMUMsQ0FBbUQsRUFBbkQsQ0FBc0QsQ0FBQyxTQUF2RCxDQUFpRSxDQUFqRTtJQURHO1dBR0wsRUFBQSxHQUFFLENBQUMsRUFBQSxDQUFBLENBQUQsQ0FBRixHQUFTLENBQUMsRUFBQSxDQUFBLENBQUQsQ0FBVCxHQUFlLEdBQWYsR0FBaUIsQ0FBQyxFQUFBLENBQUEsQ0FBRCxDQUFqQixHQUF1QixHQUF2QixHQUF5QixDQUFDLEVBQUEsQ0FBQSxDQUFELENBQXpCLEdBQStCLEdBQS9CLEdBQWlDLENBQUMsRUFBQSxDQUFBLENBQUQsQ0FBakMsR0FBdUMsR0FBdkMsR0FBeUMsQ0FBQyxFQUFBLENBQUEsQ0FBRCxDQUF6QyxHQUFnRCxDQUFDLEVBQUEsQ0FBQSxDQUFELENBQWhELEdBQXVELENBQUMsRUFBQSxDQUFBLENBQUQ7RUFKbEQ7O0VBTVAsTUFBTSxDQUFDLE9BQVAsR0FBaUIsZUFBQSxHQUNmO0lBQUEsTUFBQSxFQUFRLFNBQUMsRUFBRDtNQUNOLElBQUcsSUFBQyxDQUFBLEdBQUo7UUFDRSxFQUFBLENBQUcsSUFBQyxDQUFBLEdBQUo7QUFDQSxlQUZGOztNQUdBLE9BQUEsQ0FBUSxRQUFSLENBQWlCLENBQUMsTUFBbEIsQ0FBeUIsU0FBQyxLQUFELEVBQVEsVUFBUjtRQUN2QixJQUFHLEtBQUg7aUJBQWMsRUFBQSxDQUFHLElBQUMsQ0FBQSxHQUFELEdBQU8sSUFBQSxDQUFBLENBQVYsRUFBZDtTQUFBLE1BQUE7aUJBQXFDLEVBQUEsQ0FBRyxJQUFDLENBQUEsR0FBRCxHQUFPLE9BQUEsQ0FBUSxRQUFSLENBQWlCLENBQUMsVUFBbEIsQ0FBNkIsTUFBN0IsQ0FBb0MsQ0FBQyxNQUFyQyxDQUE0QyxVQUE1QyxFQUF3RCxNQUF4RCxDQUErRCxDQUFDLE1BQWhFLENBQXVFLEtBQXZFLENBQVYsRUFBckM7O01BRHVCLENBQXpCO0lBSk0sQ0FBUjtJQVFBLFNBQUEsRUFBVyxTQUFDLFFBQUQsRUFBVyxNQUFYLEVBQW1CLEtBQW5CLEVBQTBCLEtBQTFCO0FBQ1QsVUFBQTtNQUFBLE1BQUEsR0FDRTtRQUFBLENBQUEsRUFBRyxPQUFIO1FBQ0EsRUFBQSxFQUFJLFFBREo7UUFFQSxFQUFBLEVBQUksTUFGSjs7TUFHRixJQUFHLEtBQUg7UUFDRSxNQUFNLENBQUMsRUFBUCxHQUFZLE1BRGQ7O01BRUEsSUFBRyxLQUFIO1FBQ0UsTUFBTSxDQUFDLEVBQVAsR0FBWSxNQURkOztNQUVBLElBQUMsQ0FBQSxJQUFELENBQU0sTUFBTjtJQVRTLENBUlg7SUFvQkEsSUFBQSxFQUFNLFNBQUMsTUFBRDtNQUNKLElBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLGdCQUFkLENBQStCLFNBQS9CLENBQUo7QUFFRSxlQUZGOztNQUdBLElBQUMsQ0FBQSxNQUFELENBQVEsU0FBQyxHQUFEO1FBQ04sTUFBTSxDQUFDLE1BQVAsQ0FBYyxNQUFkLEVBQXNCO1VBQUUsR0FBQSxFQUFLLEdBQVA7U0FBdEIsRUFBb0MsZUFBZSxDQUFDLGFBQWhCLENBQUEsQ0FBcEM7UUFDQSxlQUFlLENBQUMsT0FBaEIsQ0FBd0IsMkNBQUEsR0FBOEMsT0FBQSxDQUFRLGFBQVIsQ0FBc0IsQ0FBQyxTQUF2QixDQUFpQyxNQUFqQyxDQUF0RTtNQUZNLENBQVI7SUFKSSxDQXBCTjtJQThCQSxPQUFBLEVBQVMsU0FBQyxHQUFEO01BQ1AsSUFBRyxDQUFDLFNBQVMsQ0FBQyxNQUFkO0FBQ0UsZUFERjs7TUFFQSxJQUFDLENBQUEsSUFBRCxDQUFNLEdBQU47SUFITyxDQTlCVDtJQW9DQSxJQUFBLEVBQU0sU0FBQyxHQUFEO0FBQ0osVUFBQTtNQUFBLEdBQUEsR0FBTSxJQUFJO01BQ1YsR0FBRyxDQUFDLElBQUosQ0FBUyxNQUFULEVBQWlCLEdBQWpCO01BQ0EsR0FBRyxDQUFDLElBQUosQ0FBUyxJQUFUO0lBSEksQ0FwQ047SUEwQ0EsYUFBQSxFQUFlLFNBQUE7YUFFYjtRQUNFLENBQUEsRUFBRyxDQURMO1FBRUUsR0FBQSxFQUFLLGdCQUZQOztJQUZhLENBMUNmOztBQVBGIiwic291cmNlc0NvbnRlbnQiOlsidXVpZCA9IC0+XG4gIHM0ID0gLT5cbiAgICBNYXRoLmZsb29yKCgxICsgTWF0aC5yYW5kb20oKSkgKiAweDEwMDAwKS50b1N0cmluZygxNikuc3Vic3RyaW5nIDFcblxuICBcIiN7czQoKX0je3M0KCl9LSN7czQoKX0tI3tzNCgpfS0je3M0KCl9LSN7czQoKX0je3M0KCl9I3tzNCgpfVwiXG5cbm1vZHVsZS5leHBvcnRzID0gR29vZ2xlQW5hbHl0aWNzID1cbiAgZ2V0Q2lkOiAoY2IpIC0+XG4gICAgaWYgQGNpZFxuICAgICAgY2IgQGNpZFxuICAgICAgcmV0dXJuXG4gICAgcmVxdWlyZShcImdldG1hY1wiKS5nZXRNYWMgKGVycm9yLCBtYWNBZGRyZXNzKSAtPlxuICAgICAgaWYgZXJyb3IgdGhlbiBjYihAY2lkID0gdXVpZCgpKSBlbHNlIGNiKEBjaWQgPSByZXF1aXJlKFwiY3J5cHRvXCIpLmNyZWF0ZUhhc2goXCJzaGExXCIpLnVwZGF0ZShtYWNBZGRyZXNzLCBcInV0ZjhcIikuZGlnZXN0KFwiaGV4XCIpKVxuICAgIHJldHVyblxuXG4gIHNlbmRFdmVudDogKGNhdGVnb3J5LCBhY3Rpb24sIGxhYmVsLCB2YWx1ZSkgLT5cbiAgICBwYXJhbXMgPVxuICAgICAgdDogXCJldmVudFwiXG4gICAgICBlYzogY2F0ZWdvcnlcbiAgICAgIGVhOiBhY3Rpb25cbiAgICBpZiBsYWJlbFxuICAgICAgcGFyYW1zLmVsID0gbGFiZWxcbiAgICBpZiB2YWx1ZVxuICAgICAgcGFyYW1zLmV2ID0gdmFsdWVcbiAgICBAc2VuZCBwYXJhbXNcbiAgICByZXR1cm5cblxuICBzZW5kOiAocGFyYW1zKSAtPlxuICAgIGlmICFhdG9tLnBhY2thZ2VzLmdldEFjdGl2ZVBhY2thZ2UoXCJtZXRyaWNzXCIpXG4gICAgICAjIElmIHRoZSBtZXRyaWNzIHBhY2thZ2UgaXMgZGlzYWJsZWQsIHRoZW4gdXNlciBoYXMgb3B0ZWQgb3V0LlxuICAgICAgcmV0dXJuXG4gICAgQGdldENpZCAoY2lkKSAtPlxuICAgICAgT2JqZWN0LmFzc2lnbiBwYXJhbXMsIHsgY2lkOiBjaWQgfSwgR29vZ2xlQW5hbHl0aWNzLmRlZmF1bHRQYXJhbXMoKVxuICAgICAgR29vZ2xlQW5hbHl0aWNzLnJlcXVlc3QgXCJodHRwczovL3d3dy5nb29nbGUtYW5hbHl0aWNzLmNvbS9jb2xsZWN0P1wiICsgcmVxdWlyZShcInF1ZXJ5c3RyaW5nXCIpLnN0cmluZ2lmeShwYXJhbXMpXG4gICAgICByZXR1cm5cbiAgICByZXR1cm5cblxuICByZXF1ZXN0OiAodXJsKSAtPlxuICAgIGlmICFuYXZpZ2F0b3Iub25MaW5lXG4gICAgICByZXR1cm5cbiAgICBAcG9zdCB1cmxcbiAgICByZXR1cm5cblxuICBwb3N0OiAodXJsKSAtPlxuICAgIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdFxuICAgIHhoci5vcGVuIFwiUE9TVFwiLCB1cmxcbiAgICB4aHIuc2VuZCBudWxsXG4gICAgcmV0dXJuXG5cbiAgZGVmYXVsdFBhcmFtczogLT5cbiAgICAjIGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL2FuYWx5dGljcy9kZXZndWlkZXMvY29sbGVjdGlvbi9wcm90b2NvbC92MS9wYXJhbWV0ZXJzXG4gICAge1xuICAgICAgdjogMVxuICAgICAgdGlkOiBcIlVBLTUzNTM5NTA2LTE4XCJcbiAgICB9XG4iXX0=
