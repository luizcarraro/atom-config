import { Got, PackageContentInfo, Resolution, PackageSpec, PackageMeta } from 'package-store';
import { InstallContext } from '../api/install';
import { Dependencies } from '../types';
import { ResolvedDependencies } from 'pnpm-shrinkwrap';
export declare type PkgAddress = {
    nodeId: string;
    pkgId: string;
};
export declare type InstalledPackage = {
    id: string;
    resolution: Resolution;
    dev: boolean;
    optional: boolean;
    fetchingFiles: Promise<PackageContentInfo>;
    calculatingIntegrity: Promise<void>;
    path: string;
    specRaw: string;
    name: string;
    version: string;
    peerDependencies: Dependencies;
    optionalDependencies: Set<string>;
    hasBundledDependencies: boolean;
    localLocation: string;
};
export default function installMultiple(ctx: InstallContext, specs: PackageSpec[], options: {
    force: boolean;
    prefix: string;
    storePath: string;
    registry: string;
    metaCache: Map<string, PackageMeta>;
    got: Got;
    keypath: string[];
    parentNodeId: string;
    currentDepth: number;
    resolvedDependencies?: ResolvedDependencies;
    depth: number;
    engineStrict: boolean;
    nodeVersion: string;
    pnpmVersion: string;
    offline: boolean;
    isInstallable?: boolean;
    rawNpmConfig: Object;
    nodeModules: string;
    update: boolean;
}): Promise<PkgAddress[]>;
